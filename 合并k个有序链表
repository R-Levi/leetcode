/**
     * 合并k个有序链表，分治算法，两两合并
     * @param lists
     * @return
     */
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists==null||lists.length==0)
            return null;
        return merge1(lists,0,lists.length-1);
    }

    private ListNode merge1(ListNode[] lists, int left, int right) {
        if (left==right)    return lists[left];
        int mid = left+(right-left)/2;
        ListNode l1 = merge1(lists,left,mid);
        ListNode l2 = merge1(lists,mid+1,right);
        return mergeTwoList(l1,l2);
    }

    private ListNode mergeTwoList(ListNode l1, ListNode l2) {
        if (l1==null)   return l2;
        if (l2==null)   return l1;
        if (l1.val<l2.val){
            l1.next=mergeTwoList(l1.next,l2);
            return l1;
        }else {
            l2.next=mergeTwoList(l1,l2.next);
            return l2;
        }
    }
