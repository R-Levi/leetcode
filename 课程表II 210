//拓扑排序+BFS
public int[] findOrder(int numCourses, int[][] prerequisites) {
        if(numCourses==0)   return new int[0];
        int[] inDegrees = new int[numCourses];/记录每个节点入度
        for(int[] p:prerequisites){
            inDegrees[p[0]]++;
        }
        Queue<Integer> queue = new LinkedList<>();
        //将入度维0的节点入队
        for(int i=0;i<inDegrees.length;i++){
            if(inDegrees[i]==0) queue.offer(i);
        }
        int count = 0;
        int[] res = new int[numCourses];
        while(!queue.isEmpty()){
            int cur = queue.poll();
            res[count++] = cur;
            for(int[] p:prerequisites){
                if(p[1]==cur){
                //降入度
                    inDegrees[p[0]]--;
                    if(inDegrees[p[0]]==0){
                        queue.offer(p[0]);
                    }
                }
            }
        }
        //判断是否有环
        if(count == numCourses) return res;
        return new int[0];
    }
